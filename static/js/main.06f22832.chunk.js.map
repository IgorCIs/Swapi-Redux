{"version":3,"sources":["components/FilmsHeaderList.js","components/FilmsHeader.js","components/Films.js","constants/ApiConstants.js","constants/ActionTypes.js","selectors/CommonSelectors.js","containers/FilmsContainer.js","actions/FilmsActions.js","libs/callApi.js","components/App.js","constants/RouterConstants.js","reducers/router.js","reducers/films.js","reducers/index.js","store/configureStore.js","index.js"],"names":["FilmsHeaderList","_ref","loading","error","items","react_default","a","createElement","className","map","film","i","key","title","FilmsHeader","films","components_FilmsHeaderList","Films","this","props","fetchFilms","console","log","components_FilmsHeader","Component","FILMS_URL","concat","ActionTypes","getFilms","state","connect","dispatch","Object","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","type","fetch","callApi","then","response","ok","json","Promise","reject","text","catch","sent","results","payload","stop","_x","apply","arguments","App","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","value","Fragment","FilmsContainer","INITIAL_ROUTE","keys","options","path","initialState","route","objectSpread","router","length","undefined","action","types","active","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"gPA4BeA,EAxBS,SAAAC,GAA+B,IAA5BC,EAA4BD,EAA5BC,QAASC,EAAmBF,EAAnBE,MAAOC,EAAYH,EAAZG,MACzC,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACZN,EACCG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BAAf,aACEL,EAAQ,QACNC,EAAMK,IAAI,SAACC,EAAMC,GAAP,OACRN,EAAAC,EAAAC,cAAA,OAAKK,IAAKD,EAAGH,UAAU,4BACrBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCAAf,IAAmDE,EAAKG,MAAxD,WCAHC,EAVK,SAAAb,GAAe,IAAZc,EAAYd,EAAZc,MACrB,OACEV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAACS,EAAoBD,MCcdE,8LAhBXC,KAAKC,MAAMC,8CAGJ,IACCL,EAAUG,KAAKC,MAAfJ,MAER,OADAM,QAAQC,IAAIP,GAEVV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAACgB,EAAD,CACIR,MAAOA,YAXCS,sCCAPC,GADU,GAAAC,OAFF,uBAEE,YACD,GAAAA,OAHD,uBAGC,YCHPC,GDIU,GAAAD,OAJJ,uBAII,eCHP,gBADHC,EAGU,sBAHVA,EAIU,sBAJVA,EAKO,mBCLTC,EAAW,SAAAC,GAAK,OAAIA,EAAMd,OCKxBe,cACb,SAAAD,GAAK,MACF,CACCd,MAAOa,EAASC,KAEpB,SAAAE,GAAQ,MACL,CACCX,WADD,WAEGW,ECWe,eAAA9B,EAAA+B,OAAAC,EAAA,EAAAD,CAAAE,EAAA5B,EAAA6B,KAAM,SAAAC,EAAML,GAAN,IAAAM,EAAA,OAAAH,EAAA5B,EAAAgC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC3BV,EAbC,CACCW,KAAMf,IAWmBY,EAAAE,KAAA,ECvB3BE,MDyB0BlB,OAARmB,GCxBfC,KACC,SAAAC,GAAQ,OAAKA,EAASC,GAClBD,EAASE,OACTC,QAAQC,OAAOJ,EAASK,SAE5B,SAAAhD,GAAK,OAAI8C,QAAQC,OAAO/C,KACzB0C,KACC,SAAAG,GAAI,MAAK,CAACA,SACV,SAAA7C,GAAK,MAAK,CAACA,WAEZiD,MAAM,SAAAjD,GAAK,MAAK,CAAEA,WDYM,OAErBkC,EAFqBE,EAAAc,KAG3BhC,QAAQC,IAAIe,EAAIW,KAAKM,SAErBjB,EAAIW,KACFjB,GAd0B3B,EAcKiC,EAAIW,KAAKM,QAbzC,CACCZ,KAAMf,EACN4B,QAAS,CAAEnD,YAaX2B,GA3BuB5B,EA2BKkC,EAAIlC,MA1BjC,CACCuC,KAAMf,EACN4B,QAAS,CAAEpD,YAgBc,wBAAAoC,EAAAiB,OAnBF,IAAArD,EAWGC,GAQDgC,EAAAlB,SAAN,gBAAAuC,GAAA,OAAAxD,EAAAyD,MAAAxC,KAAAyC,YAAA,ODnBR7B,CAWbb,GGHa2C,EAVf,SAAAC,GAAA,SAAAD,IAAA,OAAA5B,OAAA8B,EAAA,EAAA9B,CAAAd,KAAA0C,GAAA5B,OAAA+B,EAAA,EAAA/B,CAAAd,KAAAc,OAAAgC,EAAA,EAAAhC,CAAA4B,GAAAF,MAAAxC,KAAAyC,YAAA,OAAA3B,OAAAiC,EAAA,EAAAjC,CAAA4B,EAAAC,GAAA7B,OAAAkC,EAAA,EAAAlC,CAAA4B,EAAA,EAAAhD,IAAA,SAAAuD,MAAA,WAEQ,OACA9D,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8D,SAAA,KACI/D,EAAAC,EAAAC,cAAC8D,EAAD,WAJZT,EAAA,CAAyBpC,mCCDZ8C,EAAgB,CAC3BC,KAAM,GACNC,QAAS,GACTC,KALwB,ICGpBC,EAAe,CACnBC,MAAM3C,OAAA4C,EAAA,EAAA5C,CAAA,GAAMsC,IAgBCO,EAbA,WAAkC,IAAjChD,EAAiC8B,UAAAmB,OAAA,QAAAC,IAAApB,UAAA,GAAAA,UAAA,GAAzBe,EAAcM,EAAWrB,UAAAmB,OAAA,EAAAnB,UAAA,QAAAoB,EAC/C,OAAQC,EAAOtC,MACb,KAAKuC,EACH,OAAOjD,OAAA4C,EAAA,EAAA5C,CAAA,GACFH,EADL,CAEE8C,MAAOK,EAAOL,QAGlB,QACE,OAAO9C,ICdP6C,EAAe,CACnBtE,MAAO,GACPF,SAAS,EACTC,MAAO,KACP+E,OAAQ,MA8BKnE,EA3BD,WAAkC,IAAjCc,EAAiC8B,UAAAmB,OAAA,QAAAC,IAAApB,UAAA,GAAAA,UAAA,GAAzBe,EAAcM,EAAWrB,UAAAmB,OAAA,EAAAnB,UAAA,QAAAoB,EAC5C,OAAOC,EAAOtC,MACV,KAAKf,EACH,OAAOK,OAAA4C,EAAA,EAAA5C,CAAA,GACFH,EADL,CAEE3B,SAAS,EACTC,MAAO,OAEX,KAAKwB,EACH,OAAOK,OAAA4C,EAAA,EAAA5C,CAAA,GACFH,EADL,CAEE3B,SAAS,EACTE,MAAO4E,EAAOzB,QAAQnD,QAE1B,KAAKuB,EACH,OAAOK,OAAA4C,EAAA,EAAA5C,CAAA,GACFH,EADL,CAEE3B,SAAS,EACTE,MAAO,GACPD,MAAO6E,EAAOzB,QAAQpD,QAGxB,QACE,OAAO0B,ICtBJsD,EANKC,0BAAgB,CAChCP,SACA9D,kBCGWsE,EAFDC,sBAAYH,EAAaI,8BAAoBC,0BAAgBC,OCA3EC,IAASC,OACLtF,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAUP,MAAOA,GACbhF,EAAAC,EAAAC,cAACsF,EAAD,OAEJC,SAASC,eAAe","file":"static/js/main.06f22832.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst FilmsHeaderList = ({ loading, error, items }) => {\n  return (\n    <div className='films-header__list'>\n      <div className='films-header__list__wrapper'>\n        {loading ? \n          <div className='films-header__list__loading'> loading </div> :\n            error ? 'error' :   \n              items.map((film, i) => (\n                <div key={i} className='films-header__list__item'>\n                  <div className='films-header__list__item__name'> { film.title } </div>\n                </div>\n              ))\n            }\n        </div>\n    </div>\n  )\n}\n\nFilmsHeaderList.propTypes = {\n  loading: PropTypes.bool,\n  error: PropTypes.any,\n  items: PropTypes.array\n}\n\nexport default FilmsHeaderList\n","import React from 'react'\nimport FilmsHeaderList from './FilmsHeaderList';\n\nconst FilmsHeader = ({ films }) => {\n  return (\n    <div className='films-header'>\n      <div className='films-header__wrapper'>\n        <FilmsHeaderList {...films}/>\n      </div>\n    </div>\n  )\n}\n\nexport default FilmsHeader\n","import FilmsHeader from './FilmsHeader';\nimport React, { Component } from 'react'\n\nclass Films extends Component {\n  componentDidMount() {\n    this.props.fetchFilms()\n  }\n  \n  render() {\n    const { films } = this.props \n    console.log(films)\n    return (\n      <div className='films'>\n        <FilmsHeader  \n            films={films}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Films\n","const API_HOSTNAME = 'https://swapi.co/api';\n\nexport const PEOPLE_URL = `${API_HOSTNAME}/people/`;\nexport const FILMS_URL = `${API_HOSTNAME}/films/`;\nexport const STARSHIP_URL = `${API_HOSTNAME}/startship/`;","export default {\n    CHANGE_ROUTE: 'CHANGE_ROUTE',\n    ON_PLAY: 'ON_PLAY',\n    FETCH_FILMS_REQUEST: 'FETCH_FILMS_REQUEST',\n    FETCH_FILMS_SUCCESS: 'FETCH_FILMS_SUCCESS',   \n    FETCH_FILMS_FAIL: 'FETCH_FILMS_FAIL',   \n}","export const getFilms = state => state.films","import { connect } from 'react-redux';\nimport Films from '../components/Films';\nimport { fetchFilmNames } from '../actions/FilmsActions';\nimport { getFilms } from '../selectors/CommonSelectors';\n\nexport default connect(\n  state =>\n    ({\n      films: getFilms(state)\n    }),\n  dispatch => \n    ({\n      fetchFilms() {\n        dispatch(fetchFilmNames())\n      }  \n    })\n)(Films)","import { callApi } from \"../libs/callApi\";\nimport { FILMS_URL } from \"../constants/ApiConstants\";\nimport ActionTypes from \"../constants/ActionTypes\";\n\n\nconst fetchFilmNamesFail = error => \n  ({\n    type: ActionTypes.FETCH_FILMS_FAIL,\n    payload: { error }\n  })\n\nconst fetchFilmNamesRequest = () => \n  ({\n    type: ActionTypes.FETCH_FILMS_REQUEST\n  })\n\nconst fetchFilmNamesSuccess = items => \n  ({\n    type: ActionTypes.FETCH_FILMS_SUCCESS,\n    payload: { items }\n  })\n\n\n\nconst fetchFilmNames = () => async dispatch => {\n  dispatch(fetchFilmNamesRequest())\n  const res = await callApi(FILMS_URL)\n  console.log(res.json.results)\n\n  res.json ? \n    dispatch(fetchFilmNamesSuccess(res.json.results))\n    :\n    dispatch(fetchFilmNamesFail(res.error))\n\n}\n\nexport {\n  fetchFilmNames\n}","const callApi = (url, options) =>\n  fetch(url, options)\n    .then(\n      response => (response.ok\n        ? response.json()\n        : Promise.reject(response.text())\n      ),\n      error => Promise.reject(error))\n    .then(\n      json => ({json}),\n      error => ({error})\n    )\n    .catch(error => ({ error }));\n\nexport {\n  callApi\n}","import React, { Component } from 'react'\nimport FilmsContainer from '../containers/FilmsContainer';\n\nexport class App extends Component {\n    render() {\n        return (\n        <>\n            <FilmsContainer/> \n        </>\n        )\n    }\n}\n\nexport default App\n","export const INDEX_PATH = '';\n\nexport const INITIAL_ROUTE = {\n  keys: {},\n  options: {},\n  path: INDEX_PATH,\n};","import types from './../constants/ActionTypes';\nimport { INITIAL_ROUTE } from './../constants/RouterConstants';\n\nconst initialState = {\n  route: { ...INITIAL_ROUTE },\n};\n\nconst router = (state = initialState, action) => {\n  switch (action.type) {\n    case types.CHANGE_ROUTE:\n      return {\n        ...state,\n        route: action.route,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default router;","import ActionTypes from \"../constants/ActionTypes\";\n\nconst initialState = {\n  items: [],\n  loading: false,\n  error: null,\n  active: null,\n}\n\nconst films = (state = initialState, action) => {\n    switch(action.type) {\n        case ActionTypes.FETCH_FILMS_REQUEST:  \n          return {\n            ...state,\n            loading: true,\n            error: null\n          }\n        case ActionTypes.FETCH_FILMS_SUCCESS:\n          return {\n            ...state,\n            loading: false,\n            items: action.payload.items,\n          }\n        case ActionTypes.FETCH_FILMS_FAIL: \n          return {\n            ...state,\n            loading: false,\n            items: [],\n            error: action.payload.error\n          }\n        \n          default:\n            return state\n    }\n}\n\nexport default films","import { combineReducers } from 'redux';\nimport router from './router';\nimport films from './films';\n\nconst rootReducer = combineReducers({\n    router,\n    films,\n})\n\n\nexport default rootReducer","import { createStore, applyMiddleware } from 'redux'\n// import * as reducers from './reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport rootReducer from './../reducers';\nimport thunkMiddleware from 'redux-thunk';\n\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunkMiddleware)))\n\nexport default store","import './style/main.sass'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport store from './store/configureStore';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}