{"version":3,"sources":["components/FilmsHeaderList.js","components/FilmsHeader.js","components/Films.js","constants/ApiConstants.js","constants/ActionTypes.js","selectors/CommonSelectors.js","containers/FilmsContainer.js","actions/FilmsActions.js","libs/callApi.js","components/App.js","constants/RouterConstants.js","reducers/router.js","reducers/films.js","reducers/index.js","store/configureStore.js","index.js"],"names":["FilmsHeaderList","_ref","_ref$setActiveFilm","setActiveFilm","f","loading","error","items","active","react_default","a","createElement","className","map","film","i","key","onClick","episode_id","concat","title","FilmsHeader","films","components_FilmsHeaderList","Object","assign","Films","this","props","fetchFilms","_this$props","console","log","components_FilmsHeader","Component","FILMS_URL","ActionTypes","getFilms","state","connect","dispatch","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","type","fetch","callApi","then","response","ok","json","Promise","reject","text","catch","sent","results","payload","stop","_x","apply","arguments","id","App","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","value","Fragment","FilmsContainer","INITIAL_ROUTE","keys","options","path","initialState","route","objectSpread","router","length","undefined","action","types","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.a775afd5.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst FilmsHeaderList = ({ setActiveFilm=f=>f, loading, error, items, active }) => {\n  return (\n    <div className='films-header__list'>\n      <div className='films-header__list__wrapper'>\n        {loading ? \n          <div className='films-header__list__loading'> loading </div> :\n            error ? 'error' :   \n              items.map((film, i) => (\n                <div key={i} onClick={() => setActiveFilm(film.episode_id)} className={`films-header__list__item ${active === film.episode_id ? 'active' : ''}`}>\n                  <div className='films-header__list__item__name'> { film.title } </div>\n                </div>\n              ))\n            }\n        </div>\n    </div>\n  )\n}\n\nFilmsHeaderList.propTypes = {\n  loading: PropTypes.bool,\n  error: PropTypes.any,\n  items: PropTypes.array\n}\n\nexport default FilmsHeaderList\n","import React from 'react'\nimport FilmsHeaderList from './FilmsHeaderList'\n\nconst FilmsHeader = ({ films, setActiveFilm}) => {\n  return (\n    <div className='films-header'>\n      <div className='films-header__wrapper'>\n        <FilmsHeaderList {...films}\n                        setActiveFilm={setActiveFilm}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default FilmsHeader\n","import FilmsHeader from './FilmsHeader'\nimport React, { Component } from 'react'\n\nclass Films extends Component {\n  componentDidMount() {\n    this.props.fetchFilms()\n  }\n  \n  render() {\n    const { films, setActiveFilm } = this.props \n    console.log(films)\n    return (\n      <div className='films'>\n        <FilmsHeader  \n            films={films}\n            setActiveFilm={setActiveFilm}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Films\n","const API_HOSTNAME = 'https://swapi.co/api'\n\nexport const PEOPLE_URL = `${API_HOSTNAME}/people/`\nexport const FILMS_URL = `${API_HOSTNAME}/films/`\nexport const STARSHIP_URL = `${API_HOSTNAME}/startship/`","export default {\n    CHANGE_ROUTE: 'CHANGE_ROUTE',\n    ON_PLAY: 'ON_PLAY',\n    FETCH_FILMS_REQUEST: 'FETCH_FILMS_REQUEST',\n    FETCH_FILMS_SUCCESS: 'FETCH_FILMS_SUCCESS',   \n    FETCH_FILMS_FAIL: 'FETCH_FILMS_FAIL',   \n    CHOOSE_FILM: 'CHOOSE_FILM'\n}","export const getFilms = state => state.films","import { connect } from 'react-redux';\nimport Films from '../components/Films';\nimport { fetchFilmNames, setActiveFilm } from '../actions/FilmsActions';\nimport { getFilms } from '../selectors/CommonSelectors';\n\nexport default connect(\n  state =>\n    ({\n      films: getFilms(state)\n    }),\n  dispatch => \n    ({\n      fetchFilms() {\n        dispatch(fetchFilmNames())\n      },\n      setActiveFilm(id) {\n        // console.log(id)\n        dispatch(setActiveFilm(id))\n      }\n    })\n)(Films)\n","import { callApi } from \"../libs/callApi\"\nimport { FILMS_URL } from \"../constants/ApiConstants\"\nimport ActionTypes from \"../constants/ActionTypes\"\n\n\nconst fetchFilmNamesFail = error => \n  ({\n    type: ActionTypes.FETCH_FILMS_FAIL,\n    payload: { error }\n  })\n\nconst fetchFilmNamesRequest = () => \n  ({\n    type: ActionTypes.FETCH_FILMS_REQUEST\n  })\n\nconst fetchFilmNamesSuccess = items => \n  ({\n    type: ActionTypes.FETCH_FILMS_SUCCESS,\n    payload: { items }\n  })\n\nconst setActiveFilm = id => \n  ({\n    type: ActionTypes.CHOOSE_FILM,\n    id\n  })\n\nconst fetchFilmNames = () => async dispatch => {\n  dispatch(fetchFilmNamesRequest())\n  const res = await callApi(FILMS_URL)\n\n  res.json ? \n    dispatch(fetchFilmNamesSuccess(res.json.results))\n    :\n    dispatch(fetchFilmNamesFail(res.error))\n\n}\n\nexport {\n  fetchFilmNames,\n  setActiveFilm\n}","const callApi = (url, options) =>\n  fetch(url, options)\n    .then(\n      response => (response.ok\n        ? response.json()\n        : Promise.reject(response.text())\n      ),\n      error => Promise.reject(error))\n    .then(\n      json => ({json}),\n      error => ({error})\n    )\n    .catch(error => ({ error }));\n\nexport {\n  callApi\n}","import React, { Component } from 'react'\nimport FilmsContainer from '../containers/FilmsContainer';\n\nexport class App extends Component {\n    render() {\n        return (\n        <>\n            <FilmsContainer/> \n        </>\n        )\n    }\n}\n\nexport default App\n","export const INDEX_PATH = ''\n\nexport const INITIAL_ROUTE = {\n  keys: {},\n  options: {},\n  path: INDEX_PATH,\n}","import types from './../constants/ActionTypes'\nimport { INITIAL_ROUTE } from './../constants/RouterConstants'\n\nconst initialState = {\n  route: { ...INITIAL_ROUTE },\n}\n\nconst router = (state = initialState, action) => {\n  switch (action.type) {\n    case types.CHANGE_ROUTE:\n      return {\n        ...state,\n        route: action.route,\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default router","import ActionTypes from \"../constants/ActionTypes\";\n\nconst initialState = {\n  items: [],\n  loading: false,\n  error: null,\n  active: null,\n}\n\nconst films = (state = initialState, action) => {\n    switch(action.type) {\n        case ActionTypes.FETCH_FILMS_REQUEST:  \n          return {\n            ...state,\n            loading: true,\n            error: null\n          }\n        case ActionTypes.FETCH_FILMS_SUCCESS:\n          return {\n            ...state,\n            loading: false,\n            items: action.payload.items,\n          }\n        case ActionTypes.FETCH_FILMS_FAIL: \n          return {\n            ...state,\n            loading: false,\n            items: [],\n            error: action.payload.error\n          }\n        case ActionTypes.CHOOSE_FILM:\n          return {\n            ...state,\n            active: action.id\n          }\n          default:\n            return state\n    }\n}\n\nexport default films","import { combineReducers } from 'redux';\nimport router from './router';\nimport films from './films';\n\nconst rootReducer = combineReducers({\n    router,\n    films,\n})\n\n\nexport default rootReducer","import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport rootReducer from './../reducers';\nimport thunkMiddleware from 'redux-thunk';\n\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunkMiddleware)))\n\nexport default store","import './style/main.sass'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport store from './store/configureStore';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}